# Generated by Django 3.0.3 on 2020-05-12 05:59

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django_mysql.models
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('registration', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/banner/')),
                ('url', models.URLField()),
                ('validation', models.DateTimeField(default=datetime.datetime.now)),
                ('date_from', models.DateTimeField()),
                ('date_to', models.DateTimeField()),
                ('status', models.BooleanField(default=None)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'banners',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=200)),
                ('logo', models.ImageField(upload_to='products/brand/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'brands',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=None, max_length=200)),
                ('slug', models.SlugField(max_length=40)),
                ('image', models.ImageField(upload_to='products/category/')),
                ('timestamp', models.DateTimeField(default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='OrderId',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField(default=98181791)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='OTPHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp', models.IntegerField(default=None)),
                ('mobile_num', models.IntegerField(default=None)),
                ('timestamp', models.DateTimeField(default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('slug', models.SlugField(max_length=40)),
                ('description', tinymce.models.HTMLField()),
                ('actual_price', models.FloatField(default=None, null=True)),
                ('selling_price', models.FloatField(default=None, null=True)),
                ('image', models.FileField(blank=True, upload_to='products/')),
                ('image_slave_one', models.ImageField(blank=True, upload_to='products/')),
                ('image_slave_two', models.ImageField(blank=True, upload_to='products/')),
                ('image_slave_three', models.ImageField(blank=True, upload_to='products/')),
                ('image_slave_four', models.ImageField(blank=True, upload_to='products/')),
                ('sgst_per', models.FloatField(blank=True, default=None, null=True)),
                ('cgst_per', models.FloatField(blank=True, default=None, null=True)),
                ('igst_per', models.FloatField(blank=True, default=None, null=True)),
                ('in_offer', models.CharField(default='', max_length=200)),
                ('minimum_qty', models.IntegerField(default=0)),
                ('rewards', models.FloatField(default=0)),
                ('status', models.BooleanField(default=True)),
                ('delivery_days', models.IntegerField(default=5)),
                ('buy_count', models.IntegerField(default=0)),
                ('timestamp', models.DateTimeField(default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='products.Brand')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='products.Category')),
                ('parent_id', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='parent_product', to='products.Products')),
                ('sub_id', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='child_product', to='products.Products')),
            ],
            options={
                'verbose_name_plural': 'products',
            },
        ),
        migrations.CreateModel(
            name='ServiceEngineer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=200)),
                ('mobile', models.IntegerField(default=None)),
                ('specialist', models.CharField(default=None, max_length=200)),
                ('address', models.CharField(default=None, max_length=200)),
                ('govt_id', models.CharField(default=None, max_length=200)),
                ('charges', models.FloatField(default=None)),
                ('commission', models.FloatField(default=None)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'ServiceEngineers',
            },
        ),
        migrations.CreateModel(
            name='ServiceEnquiry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=200)),
                ('contact_num', models.IntegerField(default=None)),
                ('pincode', models.IntegerField(default=None)),
                ('address', models.TextField(default=None, max_length=550)),
                ('product', models.TextField(default=None, max_length=550)),
                ('rp_before', models.FileField(upload_to='products/serviceEnquiry/')),
                ('rp_after', models.FileField(upload_to='products/serviceEnquiry/')),
                ('status', models.CharField(default=None, max_length=200)),
                ('sec_acceptance', models.CharField(default='NO', max_length=200)),
                ('timestamp', models.DateTimeField(default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='registration.City')),
                ('service_eng', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='products.ServiceEngineer')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='registration.Register')),
            ],
            options={
                'verbose_name_plural': 'ServiceEnquiries',
            },
        ),
        migrations.CreateModel(
            name='UserCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_category', django_mysql.models.ListCharField(models.CharField(max_length=10), max_length=66, size=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='registration.Register')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceReward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reward_point', models.FloatField(default=None)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='products.ServiceEnquiry')),
            ],
            options={
                'verbose_name_plural': 'ServiceRewards',
            },
        ),
        migrations.CreateModel(
            name='ServiceReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=100)),
                ('rating', models.FloatField(default=None)),
                ('slug', models.CharField(default=None, max_length=200)),
                ('comment', models.TextField(default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('service_enq', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='products.ServiceEnquiry')),
            ],
            options={
                'verbose_name_plural': 'ServiceReviews',
            },
        ),
        migrations.CreateModel(
            name='RewardRedeem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=None)),
                ('timestamp', models.DateTimeField(default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='products.OrderId')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='registration.Register')),
            ],
            options={
                'verbose_name_plural': 'RewardRedeems',
            },
        ),
        migrations.CreateModel(
            name='ProductSpec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=None, max_length=200)),
                ('description', models.CharField(default=None, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='products.Products')),
            ],
            options={
                'verbose_name_plural': 'ProductSpecs',
            },
        ),
        migrations.CreateModel(
            name='ProductReward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reward_point', models.FloatField(default=None)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='products.OrderId')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='registration.Register')),
            ],
            options={
                'verbose_name_plural': 'ProductRewards',
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(default=None, null=True)),
                ('rating', models.IntegerField(default=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='products.Products')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='registration.Register')),
            ],
            options={
                'verbose_name_plural': 'ProductReviews',
            },
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(default=None)),
                ('quantity', models.IntegerField(default=None)),
                ('sgst_per', models.FloatField(default=None)),
                ('cgst_per', models.FloatField(default=None)),
                ('igst_per', models.FloatField(default=None)),
                ('sgst_value', models.FloatField(default=None)),
                ('cgst_value', models.FloatField(default=None)),
                ('igst_value', models.FloatField(default=None)),
                ('total', models.FloatField(default=None)),
                ('total_after_tax', models.FloatField(default=None)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='products.OrderId')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='products.Products')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='registration.Register')),
            ],
            options={
                'verbose_name_plural': 'OrderProducts',
            },
        ),
        migrations.CreateModel(
            name='OrderAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lattitude', models.CharField(default=None, max_length=200)),
                ('longitude', models.CharField(default=None, max_length=200)),
                ('pincode', models.IntegerField(default=None)),
                ('address', models.TextField(default=None, max_length=550)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='registration.City')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='products.OrderId')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='registration.Register')),
            ],
            options={
                'verbose_name_plural': 'OrderAddress',
            },
        ),
        migrations.CreateModel(
            name='AddCart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sgst_value', models.FloatField(default=None)),
                ('cgst_value', models.FloatField(default=None)),
                ('igst_value', models.FloatField(default=None)),
                ('total', models.FloatField(default=None)),
                ('total_after_tax', models.FloatField(default=None)),
                ('status', models.CharField(default=None, max_length=200)),
                ('timestamp', models.DateTimeField(default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='products.OrderId')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='products.Products')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='registration.Register')),
            ],
            options={
                'verbose_name_plural': 'Orders',
            },
        ),
    ]
